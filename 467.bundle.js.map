{"version":3,"file":"467.bundle.js","mappings":"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","sources":["webpack://sqlite-wasm-http/webpack/runtime/chunk loaded","webpack://sqlite-wasm-http/webpack/runtime/startup chunk dependencies","webpack://sqlite-wasm-http/./dist/vfs-http-types.js","webpack://sqlite-wasm-http/./dist/vfs-http.js","webpack://sqlite-wasm-http/./dist/endianness.js","webpack://sqlite-wasm-http/./dist/vfs-sync-http.js","webpack://sqlite-wasm-http/./dist/sqlite-worker.js","webpack://sqlite-wasm-http/./deps/XMLHttpRequest-stub.js","webpack://sqlite-wasm-http/webpack/bootstrap","webpack://sqlite-wasm-http/webpack/runtime/define property getters","webpack://sqlite-wasm-http/webpack/runtime/ensure chunk","webpack://sqlite-wasm-http/webpack/runtime/get javascript chunk filename","webpack://sqlite-wasm-http/webpack/runtime/global","webpack://sqlite-wasm-http/webpack/runtime/hasOwnProperty shorthand","webpack://sqlite-wasm-http/webpack/runtime/make namespace object","webpack://sqlite-wasm-http/webpack/runtime/publicPath","webpack://sqlite-wasm-http/webpack/runtime/importScripts chunk loading","webpack://sqlite-wasm-http/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(842).then(next);\n};","var _a;\nexport const defaultOptions = {\n    timeout: 20000,\n    maxPageSize: 4096,\n    cacheSize: 1024,\n    headers: {}\n};\n// These must be different from any SQLite CAPI codes\nexport var SYNC;\n(function (SYNC) {\n    SYNC[SYNC[\"WORKMSG\"] = 16777215] = \"WORKMSG\";\n    SYNC[SYNC[\"HANDSHAKE\"] = 16777214] = \"HANDSHAKE\";\n})(SYNC = SYNC || (SYNC = {}));\nconst debugOptions = (typeof SQLITE_DEBUG !== 'undefined' && SQLITE_DEBUG) ||\n    (typeof process !== 'undefined' && typeof ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.SQLITE_DEBUG) !== 'undefined' && process.env.SQLITE_DEBUG) ||\n    '';\nexport const debugSys = ['threads', 'vfs', 'cache', 'http'];\nexport const debug = {};\nfor (const d of debugSys) {\n    debug[d] = debugOptions.includes(d) ?\n        console.debug.bind(console) :\n        () => undefined;\n}\n//# sourceMappingURL=vfs-http-types.js.map","// This is the VFS layer for the shared backend\n// It run in each SQLite worker thread that uses it\n// and it is fully synchronous\nimport * as VFSHTTP from './vfs-http-types.js';\nimport { debug } from './vfs-http-types.js';\nconst openFiles = {};\nexport function installHttpVfs(sqlite3, backend, options) {\n    if (typeof SharedArrayBuffer === 'undefined') {\n        throw new Error('SharedArrayBuffer is not available. ' +\n            'If your browser supports it, the webserver must send ' +\n            '\"Cross-Origin-Opener-Policy: same-origin \"' +\n            'and \"Cross-Origin-Embedder-Policy: require-corp\" headers.');\n    }\n    if (!backend ||\n        !(backend.port instanceof MessagePort) ||\n        !(backend.shm instanceof SharedArrayBuffer))\n        throw new Error('No backend message channel in options');\n    const lock = new Int32Array(backend.shm, backend.shm.byteLength - Int32Array.BYTES_PER_ELEMENT);\n    const shm = new Uint8Array(backend.shm, 0, backend.shm.byteLength - Int32Array.BYTES_PER_ELEMENT);\n    const capi = sqlite3.capi;\n    const wasm = sqlite3.wasm;\n    const sqlite3_vfs = capi.sqlite3_vfs;\n    const sqlite3_file = capi.sqlite3_file;\n    const sqlite3_io_methods = capi.sqlite3_io_methods;\n    const httpVfs = new sqlite3_vfs();\n    const httpIoMethods = new sqlite3_io_methods();\n    httpVfs.$iVersion = 1;\n    httpVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n    httpVfs.$mxPathname = 1024;\n    httpVfs.$zName = wasm.allocCString('http');\n    httpVfs.$xDlOpen = httpVfs.$xDlError = httpVfs.$xDlSym = httpVfs.$xDlClose = null;\n    // This the sync/async wait mechanism\n    // We send messages to the async backend that manages multiple consumers\n    // Then we wait synchronously on a SharedArrayBuffer\n    const sendAndWait = (msg) => {\n        var _a;\n        Atomics.store(lock, 0, VFSHTTP.SYNC.WORKMSG);\n        backend.port.postMessage(msg);\n        let r, rc;\n        do {\n            r = Atomics.wait(lock, 0, VFSHTTP.SYNC.WORKMSG, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : VFSHTTP.defaultOptions.timeout);\n            rc = Atomics.load(lock, 0);\n            // If the backend manages to complete the operation before the wait\n            // on the next iteration will be having a pending notify that must\n            // be consumed\n        } while (r === 'ok' && rc === VFSHTTP.SYNC.WORKMSG);\n        if (r === 'timed-out') {\n            console.error('Backend timeout', r, lock, msg);\n            return -1;\n        }\n        return rc;\n    };\n    const ioSyncWrappers = {\n        xCheckReservedLock: function (fid, out) {\n            debug['vfs']('xCheckReservedLock', fid, out);\n            wasm.poke(out, 0, 'i32');\n            return 0;\n        },\n        xClose: function (fid) {\n            debug['vfs']('xClose', fid);\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            delete openFiles[fid];\n            return 0;\n        },\n        xDeviceCharacteristics: function (fid) {\n            debug['vfs']('xDeviceCharacteristics', fid);\n            return capi.SQLITE_IOCAP_IMMUTABLE;\n        },\n        xFileControl: function (fid, op, arg) {\n            debug['vfs']('xFileControl', fid, op, arg);\n            if (op === capi.SQLITE_FCNTL_SYNC)\n                return capi.SQLITE_OK;\n            return capi.SQLITE_NOTFOUND;\n        },\n        xFileSize: function (fid, size) {\n            debug['vfs']('xFileSize', fid, size);\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            const r = sendAndWait({ msg: 'xFilesize', url: openFiles[fid].url });\n            if (r !== 0) {\n                return capi.SQLITE_IOERR;\n            }\n            const sz = new BigUint64Array(backend.shm, 0, 1)[0];\n            debug['vfs']('file size is ', sz);\n            wasm.poke(size, sz, 'i64');\n            return 0;\n        },\n        xLock: function (fid, lock) {\n            debug['vfs']('xLock', fid, lock);\n            return 0;\n        },\n        xRead: function (fid, dest, n, offset) {\n            debug['vfs']('xRead', fid, dest, n, offset);\n            if (Number(offset) > Number.MAX_SAFE_INTEGER) {\n                // CampToCamp are not supported\n                return capi.SQLITE_TOOBIG;\n            }\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            const r = sendAndWait({ msg: 'xRead', url: openFiles[fid].url, n, offset });\n            if (r !== 0) {\n                console.error('xRead', r);\n                return capi.SQLITE_IOERR;\n            }\n            wasm.heap8u().set(shm.subarray(0, n), dest);\n            return capi.SQLITE_OK;\n        },\n        xSync: function (fid, flags) {\n            debug['vfs']('xSync', fid, flags);\n            return 0;\n        },\n        xTruncate: function (fid, size) {\n            debug['vfs']('xTruncate', fid, size);\n            return 0;\n        },\n        xUnlock: function (fid, lock) {\n            debug['vfs']('xUnlock', fid, lock);\n            return 0;\n        },\n        xWrite: function (fid, src, n, offset) {\n            debug['vfs']('xWrite', fid, src, n, offset);\n            return capi.SQLITE_READONLY;\n        }\n    };\n    const vfsSyncWrappers = {\n        xAccess: function (vfs, name, flags, out) {\n            debug['vfs']('xAccess', vfs, name, flags, out);\n            if ((flags & capi.SQLITE_OPEN_READONLY) === 0) {\n                wasm.poke(out, 0, 'i32');\n                return capi.SQLITE_OK;\n            }\n            const url = wasm.cstrToJs(name);\n            const r = sendAndWait({ msg: 'xAccess', url });\n            if (r !== 0) {\n                console.error('xAccess', r);\n                return capi.SQLITE_IOERR;\n            }\n            const result = new Uint32Array(backend.shm, 0, 1)[0];\n            wasm.poke(out, result, 'i32');\n            return capi.SQLITE_OK;\n        },\n        xCurrentTime: function (vfs, out) {\n            debug['vfs']('xCurrentTime', vfs, out);\n            wasm.poke(out, 2440587.5 + (new Date().getTime() / 86400000), 'double');\n            return 0;\n        },\n        xCurrentTimeInt64: function (vfs, out) {\n            debug['vfs']('xCurrentTimeInt64', vfs, out);\n            wasm.poke(out, (BigInt(2440587.5) * BigInt(86400000)) + BigInt(new Date().getTime()), 'i64');\n            return 0;\n        },\n        xDelete: function (vfs, name, doSyncDir) {\n            debug['vfs']('xDelete', vfs, name, doSyncDir);\n            return capi.SQLITE_READONLY;\n        },\n        xFullPathname: function (vfs, name, nOut, pOut) {\n            debug['vfs']('xFullPathname', vfs, name, nOut, pOut);\n            const i = wasm.cstrncpy(pOut, name, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n        },\n        xGetLastError: function (vfs, nOut, pout) {\n            debug['vfs']('xGetLastError', vfs, nOut, pout);\n            return 0;\n        },\n        xOpen: function (vfs, name, fid, flags, pOutFlags) {\n            debug['vfs']('xOpen', vfs, name, fid, flags, pOutFlags);\n            if (name === 0) {\n                console.error('HTTP VFS does not support anonymous files');\n                return capi.SQLITE_CANTOPEN;\n            }\n            if (typeof name !== 'number') {\n                return capi.SQLITE_ERROR;\n            }\n            wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n            const url = wasm.cstrToJs(name);\n            const fh = Object.create(null);\n            fh.fid = fid;\n            fh.url = url;\n            fh.sq3File = new sqlite3_file(fid);\n            fh.sq3File.$pMethods = httpIoMethods.pointer;\n            openFiles[fid] = fh;\n            const r = sendAndWait({ msg: 'xOpen', url });\n            if (r < 0) {\n                console.error('xOpen', r);\n                return capi.SQLITE_IOERR;\n            }\n            if (r !== 0) {\n                debug['vfs']('xOpen', r);\n                return capi.SQLITE_CANTOPEN;\n            }\n            return capi.SQLITE_OK;\n        }\n    };\n    sqlite3.vfs.installVfs({\n        io: { struct: httpIoMethods, methods: ioSyncWrappers },\n        vfs: { struct: httpVfs, methods: vfsSyncWrappers }\n    });\n    sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(httpVfs.pointer, function (oo1Db, sqlite3) {\n        var _a;\n        sqlite3.capi.sqlite3_busy_timeout(oo1Db, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : VFSHTTP.defaultOptions.timeout);\n        sqlite3.capi.sqlite3_exec(oo1Db, [\n            'PRAGMA journal_mode=DELETE;',\n            'PRAGMA cache_size=0;'\n        ], 0, 0, 0);\n    });\n}\n//# sourceMappingURL=vfs-http.js.map","// Procedures for changing the byte sex\n// SQLite is always Big-Endian, JS follows the platform, which is Little-Endian on x86\nimport { debug } from './vfs-http-types.js';\nconst swapNeeded = (function () {\n    const ab = new ArrayBuffer(2);\n    const u8 = new Uint8Array(ab);\n    const u16 = new Uint16Array(ab);\n    u8[0] = 0xF0;\n    u8[1] = 0x0D;\n    // Big\n    if (u16[0] == 0xF00D) {\n        debug['threads']('System is Big-Endian');\n        return false;\n    }\n    // Little\n    if (u16[0] == 0x0DF0) {\n        debug['threads']('System is Little-Endian');\n        return true;\n    }\n    throw new Error(`Failed determining endianness: ${u16}`);\n})();\nexport function ntoh16(data) {\n    if (swapNeeded) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = ((data[i] & 0xFF00) >> 8) | ((data[i] & 0x00FF) << 8);\n        }\n    }\n}\n//# sourceMappingURL=endianness.js.map","// This is the ersatz HTTP backend\n// It does not require SharedArrayBuffer and does not share its cache\n// It runs in the SQLite worker thread\nimport LRUCache from 'lru-cache';\nimport { ntoh16 } from './endianness.js';\nimport * as VFSHTTP from './vfs-http-types.js';\nimport { debug } from './vfs-http-types.js';\nconst openFiles = {};\nexport function installSyncHttpVfs(sqlite3, options) {\n    const capi = sqlite3.capi;\n    const wasm = sqlite3.wasm;\n    const sqlite3_vfs = capi.sqlite3_vfs;\n    const sqlite3_file = capi.sqlite3_file;\n    const sqlite3_io_methods = capi.sqlite3_io_methods;\n    const httpVfs = new sqlite3_vfs();\n    const httpIoMethods = new sqlite3_io_methods();\n    httpVfs.$iVersion = 1;\n    httpVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n    httpVfs.$mxPathname = 1024;\n    httpVfs.$zName = wasm.allocCString('http');\n    httpVfs.$xDlOpen = httpVfs.$xDlError = httpVfs.$xDlSym = httpVfs.$xDlClose = null;\n    const ioSyncWrappers = {\n        xCheckReservedLock: function (fid, out) {\n            debug['vfs']('xCheckReservedLock', fid, out);\n            wasm.poke(out, 0, 'i32');\n            return 0;\n        },\n        xClose: function (fid) {\n            debug['vfs']('xClose', fid);\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            delete openFiles[fid];\n            return 0;\n        },\n        xDeviceCharacteristics: function (fid) {\n            debug['vfs']('xDeviceCharacteristics', fid);\n            return capi.SQLITE_IOCAP_IMMUTABLE;\n        },\n        xFileControl: function (fid, op, arg) {\n            debug['vfs']('xFileControl', fid, op, arg);\n            if (op === capi.SQLITE_FCNTL_SYNC)\n                return capi.SQLITE_OK;\n            return capi.SQLITE_NOTFOUND;\n        },\n        xFileSize: function (fid, size) {\n            debug['vfs']('xFileSize', fid, size);\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            debug['vfs']('file size is ', openFiles[fid].size);\n            wasm.poke(size, openFiles[fid].size, 'i64');\n            return 0;\n        },\n        xLock: function (fid, lock) {\n            debug['vfs']('xLock', fid, lock);\n            return 0;\n        },\n        xRead: function (fid, dest, n, offset) {\n            var _a, _b, _c, _d;\n            debug['vfs']('xRead (sync)', fid, dest, n, offset);\n            if (Number(offset) > Number.MAX_SAFE_INTEGER) {\n                // CampToCamp are not supported\n                return capi.SQLITE_TOOBIG;\n            }\n            if (!openFiles[fid]) {\n                return capi.SQLITE_NOTFOUND;\n            }\n            const entry = openFiles[fid];\n            if (!entry.pageSize) {\n                // Determine the page size if we don't know it\n                // It is in two big-endian bytes at offset 16 in what is always the first page\n                entry.pageSize = 1024;\n                const pageDataBuffer = new Uint8Array(2);\n                const r = ioSyncWrappers.xRead(fid, pageDataBuffer, 2, BigInt(16));\n                const pageData = new Uint16Array(pageDataBuffer.buffer);\n                if (r !== 0)\n                    return capi.SQLITE_IOERR;\n                ntoh16(pageData);\n                entry.pageSize = pageData[0];\n                debug['vfs'](`page size is ${entry.pageSize}`);\n                if (entry.pageSize != 1024) {\n                    // If the page size is not 1024 we can't keep this \"page\" in the cache\n                    console.warn(`Page size for ${entry.url} is ${entry.pageSize}, recommended size is 1024`);\n                    entry.pageCache.delete(0);\n                }\n                if (entry.pageSize > ((_a = options === null || options === void 0 ? void 0 : options.maxPageSize) !== null && _a !== void 0 ? _a : VFSHTTP.defaultOptions.maxPageSize))\n                    throw new Error(`${entry.pageSize} is over the maximum configured ` +\n                        `${(_b = options === null || options === void 0 ? void 0 : options.maxPageSize) !== null && _b !== void 0 ? _b : VFSHTTP.defaultOptions.maxPageSize}`);\n            }\n            try {\n                const pageSize = BigInt(entry.pageSize);\n                const len = BigInt(n);\n                const page = offset / pageSize;\n                if (page * pageSize !== offset)\n                    debug['vfs'](`Read chunk ${offset} is not page-aligned`);\n                let pageStart = page * pageSize;\n                if (pageStart + pageSize < offset + len)\n                    throw new Error(`Read chunk ${offset}:${n} spans across a page-boundary`);\n                let data = entry.pageCache.get(Number(page));\n                if (typeof data === 'number') {\n                    debug['cache'](`[sync] cache hit (multi-page segment) for ${entry.url}:${page}`);\n                    // This page is present as a segment of a super-page\n                    const newPageStart = BigInt(data) * pageSize;\n                    data = entry.pageCache.get(data);\n                    if (data instanceof Uint8Array) {\n                        // Not all subpages are valid, there are two possible cases\n                        // where a non-valid superpage can be referenced:\n                        // * the superpage was too big to fit in the cache\n                        // * the superpage was evicted before the subsegments\n                        pageStart = newPageStart;\n                    }\n                    else {\n                        data = undefined;\n                    }\n                }\n                if (typeof data === 'undefined') {\n                    debug['cache'](`[sync] cache miss for ${entry.url}:${page}`);\n                    let chunkSize = entry.pageSize;\n                    // If the previous page is in the cache, we double the page size\n                    // This was the original page merging algorithm implemented by @phiresky\n                    let prev = page > 0 && entry.pageCache.get((Number(page) - 1));\n                    if (prev) {\n                        if (typeof prev === 'number')\n                            prev = entry.pageCache.get(prev);\n                        if (prev instanceof Uint8Array) {\n                            // Valid superpage\n                            chunkSize = prev.byteLength * 2;\n                            debug['cache'](`[sync] downloading super page of size ${chunkSize}`);\n                        }\n                    }\n                    const pages = chunkSize / entry.pageSize;\n                    // Downloading a new segment\n                    debug['http'](`downloading page ${page} of size ${chunkSize} starting at ${pageStart}`);\n                    const xhr = new XMLHttpRequest();\n                    xhr.open('GET', entry.url, false);\n                    for (const h of Object.keys((_c = options === null || options === void 0 ? void 0 : options.headers) !== null && _c !== void 0 ? _c : VFSHTTP.defaultOptions.headers))\n                        xhr.setRequestHeader(h, ((_d = options === null || options === void 0 ? void 0 : options.headers) !== null && _d !== void 0 ? _d : VFSHTTP.defaultOptions.headers)[h]);\n                    xhr.setRequestHeader('Range', `bytes=${pageStart}-${pageStart + BigInt(chunkSize - 1)}`);\n                    xhr.responseType = 'arraybuffer';\n                    xhr.onload = () => {\n                        if (xhr.response instanceof ArrayBuffer)\n                            data = new Uint8Array(xhr.response);\n                    };\n                    xhr.send();\n                    if (!data) {\n                        return capi.SQLITE_IOERR;\n                    }\n                    // TypeScript does not recognize the sync XMLHttpRequest\n                    data = data;\n                    if (!(data instanceof Uint8Array) || data.length === 0)\n                        throw new Error(`Invalid HTTP response received: ${JSON.stringify(xhr.response)}`);\n                    // In case of a multiple-page segment, this is the parent super-page\n                    entry.pageCache.set(Number(page), data);\n                    // These point to the parent super-page\n                    for (let i = Number(page) + 1; i < Number(page) + pages; i++) {\n                        entry.pageCache.set(i, Number(page));\n                    }\n                }\n                else {\n                    debug['cache'](`[sync] cache hit for ${entry.url}:${page}`);\n                }\n                const pageOffset = Number(offset - pageStart);\n                if (dest instanceof Uint8Array)\n                    dest.set(data.subarray(pageOffset, pageOffset + n));\n                else\n                    wasm.heap8u().set(data.subarray(pageOffset, pageOffset + n), dest);\n                return capi.SQLITE_OK;\n            }\n            catch (e) {\n                console.error(e);\n                return capi.SQLITE_ERROR;\n            }\n        },\n        xSync: function (fid, flags) {\n            debug['vfs']('xSync', fid, flags);\n            return 0;\n        },\n        xTruncate: function (fid, size) {\n            debug['vfs']('xTruncate', fid, size);\n            return 0;\n        },\n        xUnlock: function (fid, lock) {\n            debug['vfs']('xUnlock', fid, lock);\n            return 0;\n        },\n        xWrite: function (fid, src, n, offset) {\n            debug['vfs']('xWrite', fid, src, n, offset);\n            return capi.SQLITE_READONLY;\n        }\n    };\n    const vfsSyncWrappers = {\n        xAccess: function (vfs, name, flags, out) {\n            debug['vfs']('xAccess', vfs, name, flags, out);\n            if ((flags & capi.SQLITE_OPEN_READONLY) === 0) {\n                wasm.poke(out, 0, 'i32');\n                return capi.SQLITE_OK;\n            }\n            const fid = Symbol();\n            const r = vfsSyncWrappers.xOpen(vfs, name, fid, flags, out);\n            if (r === capi.SQLITE_OK) {\n                ioSyncWrappers.xClose(fid);\n                wasm.poke(out, 1, 'i32');\n            }\n            else {\n                wasm.poke(out, 0, 'i32');\n            }\n            return capi.SQLITE_OK;\n        },\n        xCurrentTime: function (vfs, out) {\n            debug['vfs']('xCurrentTime', vfs, out);\n            wasm.poke(out, 2440587.5 + (new Date().getTime() / 86400000), 'double');\n            return 0;\n        },\n        xCurrentTimeInt64: function (vfs, out) {\n            debug['vfs']('xCurrentTimeInt64', vfs, out);\n            wasm.poke(out, (BigInt(2440587.5) * BigInt(86400000)) + BigInt(new Date().getTime()), 'i64');\n            return 0;\n        },\n        xDelete: function (vfs, name, doSyncDir) {\n            debug['vfs']('xDelete', vfs, name, doSyncDir);\n            return capi.SQLITE_READONLY;\n        },\n        xFullPathname: function (vfs, name, nOut, pOut) {\n            debug['vfs']('xFullPathname', vfs, name, nOut, pOut);\n            const i = wasm.cstrncpy(pOut, name, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n        },\n        xGetLastError: function (vfs, nOut, pout) {\n            debug['vfs']('xGetLastError', vfs, nOut, pout);\n            return 0;\n        },\n        xOpen: function (vfs, name, fid, flags, pOutFlags) {\n            var _a, _b;\n            debug['vfs']('xOpen (sync)', vfs, name, fid, flags, pOutFlags);\n            if (name === 0) {\n                console.error('HTTP VFS does not support anonymous files');\n                return capi.SQLITE_CANTOPEN;\n            }\n            if (typeof name !== 'number') {\n                return capi.SQLITE_ERROR;\n            }\n            const url = wasm.cstrToJs(name);\n            let valid = false;\n            try {\n                const xhr = new XMLHttpRequest();\n                xhr.open('HEAD', url, false);\n                for (const h of Object.keys((_a = options === null || options === void 0 ? void 0 : options.headers) !== null && _a !== void 0 ? _a : VFSHTTP.defaultOptions.headers))\n                    xhr.setRequestHeader(h, ((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : VFSHTTP.defaultOptions.headers)[h]);\n                xhr.onload = () => {\n                    var _a, _b;\n                    const fh = Object.create(null);\n                    fh.fid = fid;\n                    fh.url = url;\n                    fh.sq3File = new sqlite3_file(fid);\n                    fh.sq3File.$pMethods = httpIoMethods.pointer;\n                    fh.size = BigInt((_a = xhr.getResponseHeader('Content-Length')) !== null && _a !== void 0 ? _a : 0);\n                    fh.pageCache = new LRUCache({\n                        maxSize: ((_b = options === null || options === void 0 ? void 0 : options.cacheSize) !== null && _b !== void 0 ? _b : VFSHTTP.defaultOptions.cacheSize) * 1024,\n                        sizeCalculation: (value) => { var _a; return (_a = value.byteLength) !== null && _a !== void 0 ? _a : 4; }\n                    });\n                    if (xhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n                        console.warn(`Server for ${url} does not advertise 'Accept-Ranges'. ` +\n                            'If the server supports it, in order to remove this message, add \"Accept-Ranges: bytes\". ' +\n                            'Additionally, if using CORS, add \"Access-Control-Expose-Headers: *\".');\n                    }\n                    openFiles[fid] = fh;\n                    valid = true;\n                };\n                xhr.send();\n            }\n            catch (e) {\n                console.error('xOpen', e);\n            }\n            if (!valid) {\n                console.error('xOpen');\n                return capi.SQLITE_CANTOPEN;\n            }\n            wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n            return capi.SQLITE_OK;\n        }\n    };\n    sqlite3.vfs.installVfs({\n        io: { struct: httpIoMethods, methods: ioSyncWrappers },\n        vfs: { struct: httpVfs, methods: vfsSyncWrappers }\n    });\n    sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(httpVfs.pointer, function (oo1Db, sqlite3) {\n        var _a;\n        sqlite3.capi.sqlite3_busy_timeout(oo1Db, (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : VFSHTTP.defaultOptions.timeout);\n        sqlite3.capi.sqlite3_exec(oo1Db, [\n            'PRAGMA journal_mode=DELETE;',\n            'PRAGMA cache_size=0;'\n        ], 0, 0, 0);\n    });\n}\n//# sourceMappingURL=vfs-sync-http.js.map","// This is the entry point for an SQLite worker thread\nimport { installHttpVfs } from './vfs-http.js';\nimport { installSyncHttpVfs } from './vfs-sync-http.js';\nimport { debug } from './vfs-http-types.js';\n// Binary version of the classic xmlhttprequest (for Node.js)\nimport { XMLHttpRequest as _XMLHttpRequest } from '#XMLHttpRequest.cjs';\ndebug['threads']('SQLite worker started');\nglobalThis.onmessage = ({ data }) => {\n    debug['threads']('SQLite received green light', data);\n    const msg = data;\n    import('#sqlite3.js')\n        .then((mod) => mod.default())\n        .then((sqlite3) => {\n        debug['threads']('SQLite init');\n        sqlite3.initWorker1API();\n        if (typeof msg.httpChannel === 'object') {\n            installHttpVfs(sqlite3, msg.httpChannel, msg.httpOptions);\n        }\n        else if (msg.httpChannel === true) {\n            if (typeof globalThis.XMLHttpRequest === 'undefined') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                globalThis.XMLHttpRequest = class XMLHttpRequest extends _XMLHttpRequest {\n                    get response() {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        const r = Uint8Array.from(this.responseText.split('')\n                            .map((x) => x.charCodeAt(0))).buffer;\n                        return r;\n                    }\n                };\n            }\n            installSyncHttpVfs(sqlite3, msg.httpOptions);\n        }\n    });\n};\n//# sourceMappingURL=sqlite-worker.js.map","export const XMLHttpRequest = null;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [842], () => (__webpack_require__(467)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t467: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunksqlite_wasm_http\"] = self[\"webpackChunksqlite_wasm_http\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","defaultOptions","timeout","maxPageSize","cacheSize","headers","SYNC","debugOptions","debugSys","debug","d","includes","console","bind","openFiles","swapNeeded","ab","ArrayBuffer","u8","Uint8Array","u16","Uint16Array","Error","globalThis","onmessage","data","msg","then","mod","default","sqlite3","initWorker1API","httpChannel","backend","options","SharedArrayBuffer","port","MessagePort","shm","lock","Int32Array","byteLength","BYTES_PER_ELEMENT","capi","wasm","sqlite3_vfs","sqlite3_file","sqlite3_io_methods","httpVfs","httpIoMethods","$iVersion","$szOsFile","structInfo","sizeof","$mxPathname","$zName","allocCString","$xDlOpen","$xDlError","$xDlSym","$xDlClose","sendAndWait","_a","r","rc","Atomics","store","WORKMSG","postMessage","wait","load","error","ioSyncWrappers","xCheckReservedLock","fid","out","poke","xClose","SQLITE_NOTFOUND","xDeviceCharacteristics","SQLITE_IOCAP_IMMUTABLE","xFileControl","op","arg","SQLITE_FCNTL_SYNC","SQLITE_OK","xFileSize","size","url","SQLITE_IOERR","sz","BigUint64Array","xLock","xRead","dest","n","offset","Number","MAX_SAFE_INTEGER","SQLITE_TOOBIG","heap8u","set","subarray","xSync","flags","xTruncate","xUnlock","xWrite","src","SQLITE_READONLY","vfsSyncWrappers","xAccess","vfs","name","SQLITE_OPEN_READONLY","cstrToJs","result","Uint32Array","xCurrentTime","Date","getTime","xCurrentTimeInt64","BigInt","xDelete","doSyncDir","xFullPathname","nOut","pOut","cstrncpy","SQLITE_CANTOPEN","xGetLastError","pout","xOpen","pOutFlags","SQLITE_ERROR","fh","Object","create","sq3File","$pMethods","pointer","installVfs","io","struct","methods","oo1","DB","dbCtorHelper","setVfsPostOpenSql","oo1Db","sqlite3_busy_timeout","sqlite3_exec","installHttpVfs","httpOptions","XMLHttpRequest","response","from","this","responseText","split","map","x","charCodeAt","buffer","_b","_c","_d","entry","pageSize","pageDataBuffer","pageData","i","length","ntoh16","warn","pageCache","delete","len","page","pageStart","get","newPageStart","undefined","chunkSize","prev","pages","xhr","open","h","keys","setRequestHeader","responseType","onload","send","JSON","stringify","pageOffset","e","Symbol","valid","getResponseHeader","maxSize","sizeCalculation","value","installSyncHttpVfs","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","key","splice","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","g","Function","window","obj","prop","prototype","hasOwnProperty","call","toStringTag","scriptUrl","importScripts","location","document","currentScript","scripts","getElementsByTagName","replace","p","b","self","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","moreModules","runtime","pop"],"sourceRoot":""}